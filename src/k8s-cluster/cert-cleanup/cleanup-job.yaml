apiVersion: batch/v1
kind: Job
metadata:
  name: zenml-cert-cleanup
  namespace: zenml
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: zenml-cert-cleanup
      restartPolicy: Never
      containers:
      - name: cleanup
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Cleaning up existing zenml TLS certificates..."
          kubectl delete certificate zenml-tls-certs -n zenml --ignore-not-found=true
          kubectl delete certificate zenml-tls-certs-selfsigned -n zenml --ignore-not-found=true
          kubectl delete secret zenml-tls-certs -n zenml --ignore-not-found=true
          kubectl delete secret zenml-tls-certs-selfsigned -n zenml --ignore-not-found=true
          kubectl delete certificaterequests -n zenml -l app.kubernetes.io/name=zenml --ignore-not-found=true
          kubectl delete orders -n zenml --all --ignore-not-found=true
          echo "Cleanup completed successfully"
  backoffLimit: 3
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zenml-cert-cleanup
  namespace: zenml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: zenml
  name: zenml-cert-cleanup
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["delete", "list"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "orders"]
  verbs: ["delete", "list"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["orders"]
  verbs: ["delete", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zenml-cert-cleanup
  namespace: zenml
subjects:
- kind: ServiceAccount
  name: zenml-cert-cleanup
  namespace: zenml
roleRef:
  kind: Role
  name: zenml-cert-cleanup
  apiGroup: rbac.authorization.k8s.io
