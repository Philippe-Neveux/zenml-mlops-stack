
# MLflow Community Chart Configuration
# Chart: https://artifacthub.io/packages/helm/community-charts/mlflow
# GitHub: https://github.com/community-charts/helm-charts/tree/main/charts/mlflow

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Number of MLflow server replicas
replicaCount: 1

# =============================================================================
# BACKEND STORE CONFIGURATION (MySQL Database)
# =============================================================================

backendStore:
  # Enable database migration on first deployment
  databaseMigration: true
  # Enable database connection check
  databaseConnectionCheck: true
  
  # MySQL configuration
  mysql:
    enabled: true
    host: "10.191.0.3"
    port: 3306
    database: "mlflow"

  # Reference to existing database secret
  existingDatabaseSecret:
    name: "mlflow-database-secret"
    usernameKey: "username"
    passwordKey: "password"

# =============================================================================
# ARTIFACT ROOT CONFIGURATION (Google Cloud Storage)
# =============================================================================

artifactRoot:
  # Enable Google Cloud Storage for artifacts
  gcs:
    enabled: true
    bucket: "zenml-472221-mlflow-artifacts"
    path: ""  # Use root level of bucket

# =============================================================================
# SERVICE ACCOUNT & SECURITY
# =============================================================================

# Use existing service account with Workload Identity
serviceAccount:
  create: false
  name: "mlflow"
  annotations: {}

# Pod security context
podSecurityContext:
  fsGroup: 1001
  fsGroupChangePolicy: "OnRootMismatch"

# Container security context
securityContext:
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: false

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

service:
  type: ClusterIP
  port: 80
  name: "http"
  annotations: {}

# =============================================================================
# INGRESS CONFIGURATION
# =============================================================================

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: mlflow.34.40.165.212.nip.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mlflow-tls
      hosts:
        - mlflow.34.40.165.212.nip.io

# =============================================================================
# RESOURCES & AUTOSCALING
# =============================================================================

# Resource limits and requests
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 512Mi

# Horizontal Pod Autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

# =============================================================================
# HEALTH CHECKS
# =============================================================================

# Liveness probe
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

# Readiness probe  
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 5

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================

# Extra environment variables for GCS integration
extraEnvVars:
  GOOGLE_APPLICATION_CREDENTIALS: ""
  MLFLOW_GCS_DEFAULT_TIMEOUT: "60"
  MLFLOW_GCS_UPLOAD_CHUNK_SIZE: "104857600"
  MLFLOW_GCS_DOWNLOAD_CHUNK_SIZE: "104857600"

# =============================================================================
# DEPLOYMENT STRATEGY
# =============================================================================

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: "100%"
    maxUnavailable: 0

# =============================================================================
# AUTHENTICATION (Disabled)
# =============================================================================

# Basic authentication - disabled for now
auth:
  enabled: false

# LDAP authentication - disabled for now  
ldapAuth:
  enabled: false

# =============================================================================
# MONITORING
# =============================================================================

# Service monitor for Prometheus (disabled for now)
serviceMonitor:
  enabled: false

# =============================================================================
# ADDITIONAL SETTINGS
# =============================================================================

# Node selector, tolerations, and affinity
nodeSelector: {}
tolerations: []
affinity: {}

# Pod annotations
podAnnotations: {}